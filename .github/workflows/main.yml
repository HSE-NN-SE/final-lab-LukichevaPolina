# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          
  CodeStyle:
      runs-on: self-hosted
      steps:
          - uses: actions/checkout@v2
          - name: Install dependencies
            run: pip install flake8 ./ 
          - name: Codestyle
            run: python3 -m flake8 ./ --ignore=F401,E402


  Tests:
      runs-on: self-hosted
      needs: CodeStyle
      steps:
          - uses: actions/checkout@v2
          - name: tests
            run: | 
              pip install -e '.[test]'
              python3 -m coverage run -m pytest
              python3 -m coverage report
  
  Deploy:
       runs-on: self-hosted
       needs: Tests
       steps:
          - name: Check Out Repo 
            uses: actions/checkout@v2

          - name: Login to Docker Hub
            uses: docker/login-action@v1
            with:
              username: ${{ secrets.DOCKER_HUB_USERNAME }}
              password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

          - name: Set up Docker Buildx
            id: buildx
            uses: docker/setup-buildx-action@v1

          - name: Build and push
            id: docker_build
            uses: docker/build-push-action@v2
            with:
              context: ./
              file: ./Dockerfile
              push: true
              tags: ${{ secrets.DOCKER_HUB_USERNAME }}/final_app:latest

          - name: Image digest
            run: echo ${{ steps.docker_build.outputs.digest }}

          - name: Run docke–∫
            run: |
              if [[ $(docker ps --filter "name=final_lab" --format "{{.ID}}") != "" ]]; then 
              docker stop final_app
              docker rm final_app
              fi
              docker run -d -p 5000:5000 --name final_lab ${{ secrets.DOCKER_HUB_USERNAME }}/final_app:latest
              
              
            
  Check:
      runs-on: self-hosted
      needs: Deploy
      steps:
         - name: curl
           id: ping
           run: |
               echo "::set-output name=status::$(curl -s -o response.txt -w "%{http_code}" http://20.42.116.187:5000/)"

         - name: check
           run: |
              if [[ ${{ steps.ping.outputs.status }} != "200" ]]; then
              echo "health check is failed"
              exit 1
              fi
              echo "It's OK"
